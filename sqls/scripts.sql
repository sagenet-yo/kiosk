-- A table with primary key as 1+ autogenerated serial
-- insert other columns not pkey

-- public.person definition

-- Drop table

-- DROP TABLE public.person;

CREATE TABLE public.person (
	id SERIAL NOT NULL,
	"name" varchar(64) NULL,
	age int4 NULL,
	gender int4 NULL,
	CONSTRAINT person_age_check CHECK ((age >= 0)),
	CONSTRAINT person_gender_check CHECK (((gender = 1) OR (gender = 0))),
	CONSTRAINT person_pkey PRIMARY KEY (id)
);


-- A table with primary key generated via a sequence
-- needs a trigger to insert

-- public.vehicle definition

-- Drop table

-- DROP TABLE public.vehicle;

CREATE TABLE public.vehicle (
	id int4 NOT NULL,
	make varchar NULL,
	model varchar NULL,
	year_of_production int4 NULL,
	CONSTRAINT vehicle_pkey PRIMARY KEY (id)
);

   
--  A function to call from the trigger
CREATE OR REPLACE FUNCTION public.set_vehicle_id()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
    NEW.id := nextval('vehicle__id_seq');
    RETURN NEW;
END;
$function$
;

-- A trigger
create trigger before_insert_vehicle before
insert
    on
    public.vehicle for each row execute function set_vehicle_id()
;


-- 1-m
-- A table with auto-generated uuids as primary key
CREATE TABLE employee_vehicle
 - id
 - vehicle_id
 - employee_id
 - tag


-- now do only serial ids here onewards
CREATE TABLE address
(
	id SERIAL PRIMARY KEY,
	line1 VARCHAR,
	street VARCHAR,
	zip INT,
	state VARCHAR,
	country VARCHAR DEFAULT 'US')

- m-m relation
 CREATE TABLE address_person_association
 ( 
 	id SERIAL PRIMARY KEY,
 	FOREIGN KEY (person_id) REFERENCES person(id)
 	FOREIGN KEY (address_id) REFERENCES address(id)
 )


